---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']" 
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED: This target host {{ HOSTS }} does not exist in the Ansible Tower Inventory 2L22"
        failed_when: True

- name: Check if host has the right OS
  gather_facts: false
  hosts: "{{ HOSTS }}"
  vars:
    HOSTS:

  tasks:
    - block:
      - name: Fail if Variable ansible_connection is winrm
        assert:
          that:
            - ansible_connection != "winrm"
          msg: "playbook is for linux not windows"

      rescue:
      - name: Invalid OS for this playbook
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED: {{ HOSTS }} is a windows cannot run this playbook"
        failed_when: True

- name: Playbook check filesystem /local/opt FULL
  gather_facts: false
  hosts: "{{ HOSTS }}"
  become: true
  vars:
    HOSTS:
    THRESHOLD:

  tasks:
    - block:

      - name: Assert that THRESHOLD is provided
        assert:
          that:
            - THRESHOLD | mandatory
            - THRESHOLD is defined
            - THRESHOLD | int != 0
          msg: "Please provide a THRESHOLD"

      - name: Check space used filesystem /local/opt  (%Use)  on {{ HOSTS }}
        shell: df -hP /local/opt |grep /local/opt |awk '{ print $5}' |cut -d% -f1
        register: result_use

      - name: "Ensure space used on /local/opt {{result_use.stdout}}% (it is less than THRESHOLD  {{THRESHOLD}}%) on {{ HOSTS }}"
        assert:
          that: result_use.stdout |float < {{THRESHOLD}}|float

      - name: Log output for SYNTBOT OK
        debug:
          msg: 
           - "SYNTBOT_OUTPUT: SUCCESSFUL: space used on /local/opt is {{result_use.stdout}}%  on {{ HOSTS }}"
           - "SYNTBOT_DISLAY: Percentage space used /local/opt is {{result_use.stdout}}% (it is less than THRESHOLD {{THRESHOLD}}%) on {{ HOSTS }}"

      rescue:

      - name: Display files size that are more than 500MB directory /local/opt/ on "{{ HOSTS }}"
        shell: "df -h /local/opt ;echo \"------- du -sh --one-file-system /local/opt/* --------\";du -sh --one-file-system /local/opt/* ;echo \"--- find file size +500MB ----\"; find /local/opt -xdev -type f -size +500M -exec du -sh {} ';' | sort -rh" 
        register: result_display


      - name: Log output for SYNTBOT FAILED
        debug:
          msg: 
           #- "SYNTBOT_OUTPUT: FAILED : Task {{ ansible_failed_task.name}} failed on {{ HOSTS }} : {{ ansible_failed_result.msg }}"
           - "SYNTBOT_OUTPUT: SUCCESSFUL: Percentage space used /local/opt is {{result_use.stdout}}% (it is greater than THRESHOLD  {{THRESHOLD}}%) on {{ HOSTS }}"
           - "SYNTBOT_DISLAY: {{ result_display.stdout }}"
        #failed_when: true 
